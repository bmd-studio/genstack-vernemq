version: '3.7'

services:
  vernemq:
    container_name: ${COMPOSE_PROJECT_NAME}_${SERVICE_NAME}
    restart: ${DOCKER_RESTART_POLICY}
    image: ${DOCKER_IMAGE_REGISTRY:-}${APP_PREFIX}/${SERVICE_NAME}:${APP_VERSION}
    build:
      context: ./
      args:
        - DOCKER_BASE_IMAGE
        - VERNEMQ_PLUGIN_PATH
    init: true
    cap_drop:
      - ALL
    env_file:
      - ${DOCKER_GENERATED_ENV_FILE:-./env/defaults}
    ports:
      - ${VERNEMQ_MQTT_MAPPED_PORT}:${VERNEMQ_MQTT_PORT}
    networks:
      backend:
        aliases:
          - ${SERVICE_NAME}
      frontend:
        aliases:
          - ${SERVICE_NAME}
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '2'
    #       memory: 500M
    logging:
      driver: ${DOCKER_LOGGING_DRIVER}
      options:
          max-file: ${DOCKER_LOGGING_MAX_FILE}
          max-size: ${DOCKER_LOGGING_MAX_SIZE}
    labels:
      - traefik.enable=${PROXY_ROUTER_ENABLE}
      - traefik.docker.network=${DOCKER_FRONTEND_NETWORK_NAME}

      - traefik.http.routers.${APP_PREFIX}-${SERVICE_NAME}-status.rule=PathPrefix(`/${APP_PREFIX}/${SERVICE_NAME}/status`)
      - traefik.http.routers.${APP_PREFIX}-${SERVICE_NAME}-status.service=${APP_PREFIX}-${SERVICE_NAME}-status
      - traefik.http.services.${APP_PREFIX}-${SERVICE_NAME}-status.loadbalancer.server.port=${VERNEMQ_STATUS_PORT}

      - traefik.http.middlewares.${APP_PREFIX}-${SERVICE_NAME}-stripprefix-status.stripprefix.prefixes=/${APP_PREFIX}/${SERVICE_NAME}
      - traefik.http.middlewares.${APP_PREFIX}-${SERVICE_NAME}-middlewares-status.chain.middlewares=${APP_PREFIX}-${SERVICE_NAME}-stripprefix-status
      - traefik.http.routers.${APP_PREFIX}-${SERVICE_NAME}-status.middlewares=${APP_PREFIX}-${SERVICE_NAME}-middlewares-status

      - traefik.http.routers.${APP_PREFIX}-${SERVICE_NAME}-host.rule=HostRegexp(`${SERVICE_NAME}.${APP_PREFIX}.${PROXY_ROUTER_DOMAIN}`)
      - traefik.http.routers.${APP_PREFIX}-${SERVICE_NAME}-path.rule=PathPrefix(`/${APP_PREFIX}/${SERVICE_NAME}`)
      - traefik.http.routers.${APP_PREFIX}-${SERVICE_NAME}-path.service=${APP_PREFIX}-${SERVICE_NAME}-ws
      - traefik.http.routers.${APP_PREFIX}-${SERVICE_NAME}-host.service=${APP_PREFIX}-${SERVICE_NAME}-ws
      - traefik.http.services.${APP_PREFIX}-${SERVICE_NAME}-ws.loadbalancer.server.port=${VERNEMQ_WS_PORT}

      - traefik.http.middlewares.${APP_PREFIX}-${SERVICE_NAME}-stripprefix.stripprefix.prefixes=/${APP_PREFIX}/${SERVICE_NAME}
      - traefik.http.middlewares.${APP_PREFIX}-${SERVICE_NAME}-middlewares-path.chain.middlewares=${APP_PREFIX}-${SERVICE_NAME}-stripprefix
      - traefik.http.routers.${APP_PREFIX}-${SERVICE_NAME}-path.middlewares=${APP_PREFIX}-${SERVICE_NAME}-middlewares-path

      #- traefik.tcp.routers.${APP_PREFIX}-${SERVICE_NAME}-tcp.rule=HostSNI(`*`)
      #- traefik.tcp.services.${APP_PREFIX}-${SERVICE_NAME}-tcp.loadbalancer.server.port=${VERNEMQ_MQTT_PORT}

networks:
  backend:
    name: ${APP_PREFIX}_${DOCKER_BACKEND_NETWORK_NAME}
    external: true
  frontend:
    name: ${DOCKER_FRONTEND_NETWORK_NAME}
    external: true
